#!/usr/bin/python

import sys, os

app_dir = os.path.abspath(__file__ + '/../..')
sys.path.append(app_dir + '/lib')

from xcsoar.mapgen.generator import Generator
from xcsoar.mapgen.georect import GeoRect

def print_help():
    print "Usage:   mapgen [Options] -wpf waypoint_file output_file"
    print "         mapgen [Options] -b latmin latmax lonmin lonmax output_file"
    print ""
    print "Options: -r resolution (terrain resolution, arcseconds per pixel)"

def main():
    args = sys.argv[1:]

    wp = None
    latmin = None
    output_file = None
    res = 9.0
    for i in range(len(args)):
        if args[i] == "-r" and i + 1 < len(args):
            res = args[i + 1]
        if args[i] == "-wpf" and i + 2 < len(args):
            wp = args[i + 1]
            output_file = args[i + 2]
        if args[i] == "-b" and i + 5 < len(args):
            latmin = args[i + 1]
            latmax = args[i + 2]
            lonmin = args[i + 3]
            lonmax = args[i + 4]
            output_file = args[i + 5]

    if (wp == None and latmin == None) or output_file == None:
        print_help()
        return

    generator = Generator(dir_data=app_dir + '/data',
                          dir_temp=app_dir + '/tmp')
    if wp != None:
        generator.add_waypoint_file(wp)
        generator.set_bounds_by_waypoint_file(wp)
    if latmin != None:
        # left, right, top, bottom
        generator.set_bounds(GeoRect(lonmin, lonmax, latmax, latmin))
    generator.add_topology()
    generator.add_terrain(res)
    generator.create(output_file)
    generator.cleanup()

if __name__ == "__main__":
    main()
