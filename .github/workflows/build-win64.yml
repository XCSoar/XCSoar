on:
  workflow_dispatch:
  push:
    paths-ignore:
      - 'doc/**'
      - 'ide/**'
      - '.github/workflows/build-container.yml'
      - '.github/workflows/build-android.yml'
      - '.github/workflows/build-unix.yml'
    branches:
      - master
  pull_request:
    paths-ignore:
      - 'doc/**'
      - 'ide/**'
      - '.github/workflows/build-container.yml'
      - '.github/workflows/build-android.yml'
      - '.github/workflows/build-unix.yml'
    branches:
      - master

env:
  TARGET: WIN64

jobs:
  compile-xcsoar-win64:
    runs-on: ubuntu-latest
    steps:
      - id: checkout
        uses: actions/checkout@v2
        with:
          submodules: True
      - id: cache-ccache
        uses: hendrikmuhs/ccache-action@v1
        with:
          key: ${{ matrix.os }}-${{ matrix.type }}-${{ env.TARGET }}
      - id: repository
        uses: ASzc/change-string-case-action@v1
        with:
          string: ${{ github.repository }}

      - name: "Cache third-party libraries"
        uses: actions/cache@v2
        with:
          key: ${{ runner.os }}-libs-${{ env.TARGET }}-${{ hashFiles('build/**') }}
          path: |
            ${{ github.workspace }}/output/${{ env.TARGET }}/lib/lib
            !${{ github.workspace }}/output/${{ env.TARGET }}/lib/lib/build

      - name: XCSoar Compile WIN64
        uses: addnab/docker-run-action@v3
        with:
          image: ghcr.io/${{ steps.repository.outputs.lowercase }}/xcsoar-build:latest
          options: -v ${{ github.workspace }}:/opt/xcsoar -v /home/runner/work/XCSoar/XCSoar/.ccache:/root/.ccache
          run: |
            cd /opt/xcsoar
            xcsoar-compile ${{ env.TARGET }} USE_CCACHE=y V=2 everything

      - name: store checks and compile artefacts
        uses: actions/upload-artifact@v2
        with:
          name: xcsoar-${{ env.TARGET }}-artifact
          path: |
            ${{ github.workspace }}/output/${{ env.TARGET }}
            !${{ github.workspace }}/output/${{ env.TARGET }}/lib/build
            !**.d
          retention-days: 1

  xcsoar-run-checks-win64:
    runs-on: windows-latest
    needs: compile-xcsoar-win64
    steps:
    - id: checkout
      uses: actions/checkout@v2
      with:
        submodules: True
    - name: fetch artifacts
      uses: actions/download-artifact@v2
      with:
        name: xcsoar-${{ env.TARGET }}-artifact
        path: ${{ github.workspace }}/output/${{ env.TARGET }}
    - name: XCSoar run checks on ${{ env.TARGET }}
      run: make check-no-build
      working-directory: ${{ github.workspace }}
