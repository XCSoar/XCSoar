Index: boost_1_85_0/boost/geometry/util/series_expansion.hpp
===================================================================
--- boost_1_85_0.orig/boost/geometry/util/series_expansion.hpp
+++ boost_1_85_0/boost/geometry/util/series_expansion.hpp
@@ -34,6 +34,8 @@
 #include <boost/geometry/core/assert.hpp>
 #include <boost/geometry/util/math.hpp>
 
+#include <array>
+
 namespace boost { namespace geometry { namespace series_expansion {
 
     /*
@@ -699,7 +701,7 @@ namespace boost { namespace geometry { n
      These structs allow the caller to only know the series order.
     */
     template <size_t SeriesOrder, typename CT>
-    struct coeffs_C1 : boost::array<CT, SeriesOrder + 1>
+    struct coeffs_C1 : std::array<CT, SeriesOrder + 1>
     {
         coeffs_C1(CT const& epsilon)
         {
@@ -708,7 +710,7 @@ namespace boost { namespace geometry { n
     };
 
     template <size_t SeriesOrder, typename CT>
-    struct coeffs_C1p : boost::array<CT, SeriesOrder + 1>
+    struct coeffs_C1p : std::array<CT, SeriesOrder + 1>
     {
         coeffs_C1p(CT const& epsilon)
         {
@@ -717,7 +719,7 @@ namespace boost { namespace geometry { n
     };
 
     template <size_t SeriesOrder, typename CT>
-    struct coeffs_C2 : boost::array<CT, SeriesOrder + 1>
+    struct coeffs_C2 : std::array<CT, SeriesOrder + 1>
     {
         coeffs_C2(CT const& epsilon)
         {
@@ -726,7 +728,7 @@ namespace boost { namespace geometry { n
     };
 
     template <size_t SeriesOrder, typename CT>
-    struct coeffs_C3x : boost::array<CT, (SeriesOrder * (SeriesOrder - 1)) / 2>
+    struct coeffs_C3x : std::array<CT, (SeriesOrder * (SeriesOrder - 1)) / 2>
     {
         coeffs_C3x(CT const& n)
         {
@@ -735,7 +737,7 @@ namespace boost { namespace geometry { n
     };
 
     template <size_t SeriesOrder, typename CT>
-    struct coeffs_C3 : boost::array<CT, SeriesOrder>
+    struct coeffs_C3 : std::array<CT, SeriesOrder>
     {
         coeffs_C3(CT const& n, CT const& epsilon)
         {
@@ -746,7 +748,7 @@ namespace boost { namespace geometry { n
     };
 
     template <size_t SeriesOrder, typename CT>
-    struct coeffs_A3 : boost::array<CT, SeriesOrder>
+    struct coeffs_A3 : std::array<CT, SeriesOrder>
     {
         coeffs_A3(CT const& n)
         {
