Index: boost_1_85_0/boost/json/impl/parse.ipp
===================================================================
--- boost_1_85_0.orig/boost/json/impl/parse.ipp
+++ boost_1_85_0/boost/json/impl/parse.ipp
@@ -15,7 +15,9 @@
 #include <boost/json/parser.hpp>
 #include <boost/json/detail/except.hpp>
 
+#ifdef ENABLE_IOSTREAM
 #include <istream>
+#endif // ENABLE_IOSTREAM
 
 namespace boost {
 namespace json {
@@ -64,6 +66,8 @@ parse(
     return jv;
 }
 
+#ifdef ENABLE_IOSTREAM
+
 value
 parse(
     std::istream& is,
@@ -130,6 +134,8 @@ parse(
     return jv;
 }
 
+#endif // ENABLE_IOSTREAM
+
 } // namespace json
 } // namespace boost
 
Index: boost_1_85_0/boost/json/impl/value.ipp
===================================================================
--- boost_1_85_0.orig/boost/json/impl/value.ipp
+++ boost_1_85_0/boost/json/impl/value.ipp
@@ -14,7 +14,9 @@
 #include <boost/json/value.hpp>
 #include <boost/json/parser.hpp>
 #include <cstring>
+#ifdef ENABLE_IOSTREAM
 #include <istream>
+#endif // ENABLE_IOSTREAM
 #include <limits>
 #include <new>
 #include <utility>
@@ -416,6 +418,8 @@ swap(value& other)
     ::new(this) value(pilfer(temp2));
 }
 
+#ifdef ENABLE_IOSTREAM
+
 std::istream&
 operator>>(
     std::istream& is,
@@ -527,6 +531,8 @@ operator>>(
     return is;
 }
 
+#endif // ENABLE_IOSTREAM
+
 //----------------------------------------------------------
 //
 // private
Index: boost_1_85_0/boost/json/impl/serialize.ipp
===================================================================
--- boost_1_85_0.orig/boost/json/impl/serialize.ipp
+++ boost_1_85_0/boost/json/impl/serialize.ipp
@@ -12,11 +12,15 @@
 
 #include <boost/json/serialize.hpp>
 #include <boost/json/serializer.hpp>
+#ifdef ENABLE_IOSTREAM
 #include <ostream>
+#endif // ENABLE_IOSTREAM
 
 namespace boost {
 namespace json {
 
+#ifdef ENABLE_IOSTREAM
+
 namespace {
 
 int serialize_xalloc = std::ios::xalloc();
@@ -50,6 +54,8 @@ get_stream_flags( std::ostream& os )
 
 } // namespace
 
+#endif // ENABLE_IOSTREAM
+
 static
 void
 serialize_impl(
@@ -173,6 +179,8 @@ serialize(
 
 //----------------------------------------------------------
 
+#ifdef ENABLE_IOSTREAM
+
 //[example_operator_lt__lt_
 // Serialize a value into an output stream
 
@@ -253,6 +261,8 @@ operator<<( std::ostream& os, serialize_
     return os;
 }
 
+#endif // ENABLE_IOSTREAM
+
 } // namespace json
 } // namespace boost
 
Index: boost_1_85_0/boost/json/impl/kind.ipp
===================================================================
--- boost_1_85_0.orig/boost/json/impl/kind.ipp
+++ boost_1_85_0/boost/json/impl/kind.ipp
@@ -11,7 +11,9 @@
 #define BOOST_JSON_IMPL_KIND_IPP
 
 #include <boost/json/kind.hpp>
+#ifdef ENABLE_IOSTREAM
 #include <ostream>
+#endif // ENABLE_IOSTREAM
 
 namespace boost {
 namespace json {
@@ -33,6 +35,8 @@ to_string(kind k) noexcept
     }
 }
 
+#ifdef ENABLE_IOSTREAM
+
 std::ostream&
 operator<<(std::ostream& os, kind k)
 {
@@ -40,6 +44,8 @@ operator<<(std::ostream& os, kind k)
     return os;
 }
 
+#endif // ENABLE_IOSTREAM
+
 } // namespace json
 } // namespace boost
 
Index: boost_1_85_0/boost/json/impl/string.ipp
===================================================================
--- boost_1_85_0.orig/boost/json/impl/string.ipp
+++ boost_1_85_0/boost/json/impl/string.ipp
@@ -13,7 +13,9 @@
 #include <boost/json/detail/except.hpp>
 #include <algorithm>
 #include <new>
+#ifdef ENABLE_IOSTREAM
 #include <ostream>
+#endif // ENABLE_IOSTREAM
 #include <stdexcept>
 #include <string>
 #include <utility>
Index: boost_1_85_0/boost/system/detail/error_code.hpp
===================================================================
--- boost_1_85_0.orig/boost/system/detail/error_code.hpp
+++ boost_1_85_0/boost/system/detail/error_code.hpp
@@ -30,7 +30,9 @@
 #include <boost/cstdint.hpp>
 #include <boost/config.hpp>
 #include <boost/config/workaround.hpp>
+#ifdef ENABLE_IOSTREAM
 #include <ostream>
+#endif // ENABLE_IOSTREAM
 #include <new>
 #include <cstdio>
 
@@ -628,12 +630,14 @@ public:
         }
     }
 
+#ifdef ENABLE_IOSTREAM
     template<class Ch, class Tr>
         inline friend std::basic_ostream<Ch, Tr>&
         operator<< (std::basic_ostream<Ch, Tr>& os, error_code const & ec)
     {
         return os << ec.to_string().c_str();
     }
+#endif // ENABLE_IOSTREAM
 
     std::string what() const
     {
Index: boost_1_85_0/boost/geometry/views/identity_view.hpp
===================================================================
--- boost_1_85_0.orig/boost/geometry/views/identity_view.hpp
+++ boost_1_85_0/boost/geometry/views/identity_view.hpp
@@ -18,7 +18,7 @@
 #ifndef BOOST_GEOMETRY_VIEWS_IDENTITY_VIEW_HPP
 #define BOOST_GEOMETRY_VIEWS_IDENTITY_VIEW_HPP
 
-#include <boost/range/iterator_range.hpp>
+#include <boost/range/iterator_range_core.hpp>
 
 #include <boost/range/begin.hpp>
 #include <boost/range/end.hpp>
Index: boost_1_85_0/boost/range/adaptor/reversed.hpp
===================================================================
--- boost_1_85_0.orig/boost/range/adaptor/reversed.hpp
+++ boost_1_85_0/boost/range/adaptor/reversed.hpp
@@ -11,7 +11,7 @@
 #ifndef BOOST_RANGE_ADAPTOR_REVERSED_HPP
 #define BOOST_RANGE_ADAPTOR_REVERSED_HPP
 
-#include <boost/range/iterator_range.hpp>
+#include <boost/range/iterator_range_core.hpp>
 #include <boost/range/concepts.hpp>
 #include <boost/iterator/reverse_iterator.hpp>
 
Index: boost_1_85_0/boost/range/detail/range_return.hpp
===================================================================
--- boost_1_85_0.orig/boost/range/detail/range_return.hpp
+++ boost_1_85_0/boost/range/detail/range_return.hpp
@@ -11,7 +11,7 @@
 
 #include <boost/range/begin.hpp>
 #include <boost/range/end.hpp>
-#include <boost/range/iterator_range.hpp>
+#include <boost/range/iterator_range_core.hpp>
 #include <boost/next_prior.hpp>
 
 namespace boost
Index: boost_1_85_0/boost/json/impl/serializer.ipp
===================================================================
--- boost_1_85_0.orig/boost/json/impl/serializer.ipp
+++ boost_1_85_0/boost/json/impl/serializer.ipp
@@ -13,7 +13,7 @@
 #include <boost/json/serializer.hpp>
 #include <boost/json/detail/format.hpp>
 #include <boost/json/detail/sse2.hpp>
-#include <ostream>
+//#include <ostream>
 
 #ifdef _MSC_VER
 #pragma warning(push)
